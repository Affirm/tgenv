#!/usr/bin/env bash

function error_and_die() {
  echo -e "tgenv: $(basename ${0}): \033[0;31m[ERROR] ${1}\033[0;39m" >&2
  exit 1
}

function warn_and_continue() {
  echo -e "tgenv: $(basename ${0}): \033[0;33m[WARN] ${1}\033[0;39m" >&2
}

function info() {
  echo -e "\033[0;32m[INFO] ${1}\033[0;39m"
}

[ -n "${TGENV_DEBUG}" ] && set -x

[ "${#}" -gt 1 ] && error_and_die "usage: tgenv install [<version>]"

declare version_requested version regex

if [ -z "${1}" ]; then
  version_file="$(tgenv-version-file)"
  if [ "${version_file}" != "${TGENV_ROOT}/version" ]; then
    version_requested="$(cat ${version_file} || true)"
  fi
else
  version_requested="${1}"
fi

if [[ "${version_requested}" =~ ^latest\:.*$ ]]; then
  version="${version_requested%%\:*}"
  regex="${version_requested##*\:}"
elif [[ "${version_requested}" =~ ^latest$ ]]; then
  version="${version_requested}"
  regex=""
else
  version="${version_requested}"
  regex="${version_requested}"
fi

[ -n "${version}" ] || error_and_die "Version is not specified"
version="$(tgenv-list-remote | grep -e "${regex}" | head -n 1)"
[ -n "${version}" ] || error_and_die "No versions matching '${1}' found in remote"

dst_path="${TGENV_ROOT}/versions/${version}"
if [ -f "${dst_path}/terragrunt" ]; then
  echo "Terraform v${version} is already installed"
  exit 0
fi

case "$(uname -s)" in
  Darwin*)
    os="darwin_amd64"
    ;;
  MINGW64*)
    os="windows_amd64"
    ;;
  *)
    os="linux_amd64"
    ;;
esac

version_url="https://github.com/gruntwork-io/terragrunt/releases/download/v${version}"

tarball_name="terragrunt_${os}"

info "Installing Terragrunt v${version}"

mkdir -p "${dst_path}" || error_and_die "Failed to make directory ${dst_path}"

info "Downloading release tarball from ${version_url}/${tarball_name}"
curl -# --tlsv1.2 --location-trusted -f -o "${dst_path}/terragrunt" "${version_url}/${tarball_name}" || error_and_die "Tarball download failed"

chmod +x "${dst_path}/terragrunt" || error_and_die "Change rights failed"

info "Installation of terragrunt v${version} successful"
